|top
clk => clk.IN5
reset_n => _.IN1
reset_n => _.IN1
reset_n => _.IN1
reset_n => _.IN1
reset_n => _.IN1
key_sw[0] => led[0].DATAIN
key_sw[1] => led[1].DATAIN
key_sw[2] => led[2].DATAIN
key_sw[3] => led[3].DATAIN
led[0] << key_sw[0].DB_MAX_OUTPUT_PORT_TYPE
led[1] << key_sw[1].DB_MAX_OUTPUT_PORT_TYPE
led[2] << key_sw[2].DB_MAX_OUTPUT_PORT_TYPE
led[3] << key_sw[3].DB_MAX_OUTPUT_PORT_TYPE
abcdefgh[0] << <VCC>
abcdefgh[1] << <VCC>
abcdefgh[2] << <VCC>
abcdefgh[3] << <VCC>
abcdefgh[4] << <VCC>
abcdefgh[5] << <VCC>
abcdefgh[6] << <VCC>
abcdefgh[7] << <VCC>
digit[0] << <VCC>
digit[1] << <VCC>
digit[2] << <VCC>
digit[3] << <VCC>
buzzer << <VCC>
hsync << vga:i_vga.hsync
vsync << vga:i_vga.vsync
rgb[0] << RGBMemory_top:FrameBuffer.RGB
rgb[1] << RGBMemory_top:FrameBuffer.RGB
rgb[2] << RGBMemory_top:FrameBuffer.RGB
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
=======
>>>>>>> Stashed changes


|top|pll:pll
areset => areset.IN1
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk


|top|pll:pll|altpll:altpll_component
inclk[0] => pll_altpll:auto_generated.inclk[0]
inclk[1] => pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => pll_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|top|pll:pll|altpll:altpll_component|pll_altpll:auto_generated
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
>>>>>>> Stashed changes


|top|vga:i_vga
clk => vpos[0]~reg0.CLK
clk => vpos[1]~reg0.CLK
clk => vpos[2]~reg0.CLK
clk => vpos[3]~reg0.CLK
clk => vpos[4]~reg0.CLK
clk => vpos[5]~reg0.CLK
clk => vpos[6]~reg0.CLK
clk => vpos[7]~reg0.CLK
clk => vpos[8]~reg0.CLK
clk => vpos[9]~reg0.CLK
clk => hpos[0]~reg0.CLK
clk => hpos[1]~reg0.CLK
clk => hpos[2]~reg0.CLK
clk => hpos[3]~reg0.CLK
clk => hpos[4]~reg0.CLK
clk => hpos[5]~reg0.CLK
clk => hpos[6]~reg0.CLK
clk => hpos[7]~reg0.CLK
clk => hpos[8]~reg0.CLK
clk => hpos[9]~reg0.CLK
clk => display_on~reg0.CLK
clk => vsync~reg0.CLK
clk => hsync~reg0.CLK
reset => vpos[0]~reg0.ACLR
reset => vpos[1]~reg0.ACLR
reset => vpos[2]~reg0.ACLR
reset => vpos[3]~reg0.ACLR
reset => vpos[4]~reg0.ACLR
reset => vpos[5]~reg0.ACLR
reset => vpos[6]~reg0.ACLR
reset => vpos[7]~reg0.ACLR
reset => vpos[8]~reg0.ACLR
reset => vpos[9]~reg0.ACLR
reset => hpos[0]~reg0.ACLR
reset => hpos[1]~reg0.ACLR
reset => hpos[2]~reg0.ACLR
reset => hpos[3]~reg0.ACLR
reset => hpos[4]~reg0.ACLR
reset => hpos[5]~reg0.ACLR
reset => hpos[6]~reg0.ACLR
reset => hpos[7]~reg0.ACLR
reset => hpos[8]~reg0.ACLR
reset => hpos[9]~reg0.ACLR
reset => display_on~reg0.ACLR
reset => vsync~reg0.ACLR
reset => hsync~reg0.ACLR
enable => vpos[0]~reg0.ENA
enable => hsync~reg0.ENA
enable => vsync~reg0.ENA
enable => display_on~reg0.ENA
enable => hpos[9]~reg0.ENA
enable => hpos[8]~reg0.ENA
enable => hpos[7]~reg0.ENA
enable => hpos[6]~reg0.ENA
enable => hpos[5]~reg0.ENA
enable => hpos[4]~reg0.ENA
enable => hpos[3]~reg0.ENA
enable => hpos[2]~reg0.ENA
enable => hpos[1]~reg0.ENA
enable => hpos[0]~reg0.ENA
enable => vpos[9]~reg0.ENA
enable => vpos[8]~reg0.ENA
enable => vpos[7]~reg0.ENA
enable => vpos[6]~reg0.ENA
enable => vpos[5]~reg0.ENA
enable => vpos[4]~reg0.ENA
enable => vpos[3]~reg0.ENA
enable => vpos[2]~reg0.ENA
enable => vpos[1]~reg0.ENA
hsync <= hsync~reg0.DB_MAX_OUTPUT_PORT_TYPE
vsync <= vsync~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_on <= display_on~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[0] <= hpos[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[1] <= hpos[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[2] <= hpos[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[3] <= hpos[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[4] <= hpos[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[5] <= hpos[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[6] <= hpos[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[7] <= hpos[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[8] <= hpos[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[9] <= hpos[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[0] <= vpos[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[1] <= vpos[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[2] <= vpos[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[3] <= vpos[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[4] <= vpos[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[5] <= vpos[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[6] <= vpos[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[7] <= vpos[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[8] <= vpos[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[9] <= vpos[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|ROM_top:ROM
clk => RGB[0]~reg0.CLK
clk => RGB[1]~reg0.CLK
clk => RGB[2]~reg0.CLK
clk => vpos[0]~reg0.CLK
clk => vpos[1]~reg0.CLK
clk => vpos[2]~reg0.CLK
clk => vpos[3]~reg0.CLK
clk => vpos[4]~reg0.CLK
clk => vpos[5]~reg0.CLK
clk => vpos[6]~reg0.CLK
clk => vpos[7]~reg0.CLK
clk => vpos[8]~reg0.CLK
clk => vpos[9]~reg0.CLK
clk => hpos[0]~reg0.CLK
clk => hpos[1]~reg0.CLK
clk => hpos[2]~reg0.CLK
clk => hpos[3]~reg0.CLK
clk => hpos[4]~reg0.CLK
clk => hpos[5]~reg0.CLK
clk => hpos[6]~reg0.CLK
clk => hpos[7]~reg0.CLK
clk => hpos[8]~reg0.CLK
clk => hpos[9]~reg0.CLK
clk => ROMready~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => ROMready.OUTPUTSELECT
rst => hpos.OUTPUTSELECT
rst => hpos.OUTPUTSELECT
rst => hpos.OUTPUTSELECT
rst => hpos.OUTPUTSELECT
rst => hpos.OUTPUTSELECT
rst => hpos.OUTPUTSELECT
rst => hpos.OUTPUTSELECT
rst => hpos.OUTPUTSELECT
rst => hpos.OUTPUTSELECT
rst => hpos.OUTPUTSELECT
rst => vpos.OUTPUTSELECT
rst => vpos.OUTPUTSELECT
rst => vpos.OUTPUTSELECT
rst => vpos.OUTPUTSELECT
rst => vpos.OUTPUTSELECT
rst => vpos.OUTPUTSELECT
rst => vpos.OUTPUTSELECT
rst => vpos.OUTPUTSELECT
rst => vpos.OUTPUTSELECT
rst => vpos.OUTPUTSELECT
rst => RGB.OUTPUTSELECT
rst => RGB.OUTPUTSELECT
rst => RGB.OUTPUTSELECT
fifofull => always1.IN0
enable => always1.IN1
display_on => always1.IN1
hpos[0] <= hpos[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[1] <= hpos[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[2] <= hpos[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[3] <= hpos[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[4] <= hpos[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[5] <= hpos[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[6] <= hpos[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[7] <= hpos[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[8] <= hpos[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hpos[9] <= hpos[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[0] <= vpos[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[1] <= vpos[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[2] <= vpos[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[3] <= vpos[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[4] <= vpos[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[5] <= vpos[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[6] <= vpos[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[7] <= vpos[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[8] <= vpos[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
vpos[9] <= vpos[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RGB[0] <= RGB[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RGB[1] <= RGB[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RGB[2] <= RGB[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ROMready <= ROMready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|FIFO_top:FIFO
clk => flip_flop_fifo:HPOS_FIFO.clk
clk => flip_flop_fifo:VPOS_FIFO.clk
clk => flip_flop_fifo:RGB_FIFO.clk
clk => pop.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
rst => flip_flop_fifo:HPOS_FIFO.rst
rst => flip_flop_fifo:VPOS_FIFO.rst
rst => flip_flop_fifo:RGB_FIFO.rst
push => flip_flop_fifo:HPOS_FIFO.push
push => flip_flop_fifo:VPOS_FIFO.push
push => flip_flop_fifo:RGB_FIFO.push
toppop => pop.ENA
toppop => counter[0].ENA
toppop => counter[1].ENA
toppop => counter[2].ENA
hpos_write[0] => flip_flop_fifo:HPOS_FIFO.write_data[0]
hpos_write[1] => flip_flop_fifo:HPOS_FIFO.write_data[1]
hpos_write[2] => flip_flop_fifo:HPOS_FIFO.write_data[2]
hpos_write[3] => flip_flop_fifo:HPOS_FIFO.write_data[3]
hpos_write[4] => flip_flop_fifo:HPOS_FIFO.write_data[4]
hpos_write[5] => flip_flop_fifo:HPOS_FIFO.write_data[5]
hpos_write[6] => flip_flop_fifo:HPOS_FIFO.write_data[6]
hpos_write[7] => flip_flop_fifo:HPOS_FIFO.write_data[7]
hpos_write[8] => flip_flop_fifo:HPOS_FIFO.write_data[8]
hpos_write[9] => flip_flop_fifo:HPOS_FIFO.write_data[9]
vpos_write[0] => flip_flop_fifo:VPOS_FIFO.write_data[0]
vpos_write[1] => flip_flop_fifo:VPOS_FIFO.write_data[1]
vpos_write[2] => flip_flop_fifo:VPOS_FIFO.write_data[2]
vpos_write[3] => flip_flop_fifo:VPOS_FIFO.write_data[3]
vpos_write[4] => flip_flop_fifo:VPOS_FIFO.write_data[4]
vpos_write[5] => flip_flop_fifo:VPOS_FIFO.write_data[5]
vpos_write[6] => flip_flop_fifo:VPOS_FIFO.write_data[6]
vpos_write[7] => flip_flop_fifo:VPOS_FIFO.write_data[7]
vpos_write[8] => flip_flop_fifo:VPOS_FIFO.write_data[8]
vpos_write[9] => flip_flop_fifo:VPOS_FIFO.write_data[9]
RGB_write[0] => flip_flop_fifo:RGB_FIFO.write_data[0]
RGB_write[1] => flip_flop_fifo:RGB_FIFO.write_data[1]
RGB_write[2] => flip_flop_fifo:RGB_FIFO.write_data[2]
hpos_read[0] <= flip_flop_fifo:HPOS_FIFO.read_data[0]
hpos_read[1] <= flip_flop_fifo:HPOS_FIFO.read_data[1]
hpos_read[2] <= flip_flop_fifo:HPOS_FIFO.read_data[2]
hpos_read[3] <= flip_flop_fifo:HPOS_FIFO.read_data[3]
hpos_read[4] <= flip_flop_fifo:HPOS_FIFO.read_data[4]
hpos_read[5] <= flip_flop_fifo:HPOS_FIFO.read_data[5]
hpos_read[6] <= flip_flop_fifo:HPOS_FIFO.read_data[6]
hpos_read[7] <= flip_flop_fifo:HPOS_FIFO.read_data[7]
hpos_read[8] <= flip_flop_fifo:HPOS_FIFO.read_data[8]
hpos_read[9] <= flip_flop_fifo:HPOS_FIFO.read_data[9]
vpos_read[0] <= flip_flop_fifo:VPOS_FIFO.read_data[0]
vpos_read[1] <= flip_flop_fifo:VPOS_FIFO.read_data[1]
vpos_read[2] <= flip_flop_fifo:VPOS_FIFO.read_data[2]
vpos_read[3] <= flip_flop_fifo:VPOS_FIFO.read_data[3]
vpos_read[4] <= flip_flop_fifo:VPOS_FIFO.read_data[4]
vpos_read[5] <= flip_flop_fifo:VPOS_FIFO.read_data[5]
vpos_read[6] <= flip_flop_fifo:VPOS_FIFO.read_data[6]
vpos_read[7] <= flip_flop_fifo:VPOS_FIFO.read_data[7]
vpos_read[8] <= flip_flop_fifo:VPOS_FIFO.read_data[8]
vpos_read[9] <= flip_flop_fifo:VPOS_FIFO.read_data[9]
RGB_read[0] <= flip_flop_fifo:RGB_FIFO.read_data[0]
RGB_read[1] <= flip_flop_fifo:RGB_FIFO.read_data[1]
RGB_read[2] <= flip_flop_fifo:RGB_FIFO.read_data[2]
empty <= empty.DB_MAX_OUTPUT_PORT_TYPE
full <= full.DB_MAX_OUTPUT_PORT_TYPE


|top|FIFO_top:FIFO|flip_flop_fifo:HPOS_FIFO
clk => data.we_a.CLK
clk => data.waddr_a[4].CLK
clk => data.waddr_a[3].CLK
clk => data.waddr_a[2].CLK
clk => data.waddr_a[1].CLK
clk => data.waddr_a[0].CLK
clk => data.data_a[9].CLK
clk => data.data_a[8].CLK
clk => data.data_a[7].CLK
clk => data.data_a[6].CLK
clk => data.data_a[5].CLK
clk => data.data_a[4].CLK
clk => data.data_a[3].CLK
clk => data.data_a[2].CLK
clk => data.data_a[1].CLK
clk => data.data_a[0].CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => rd_ptr[0].CLK
clk => rd_ptr[1].CLK
clk => rd_ptr[2].CLK
clk => rd_ptr[3].CLK
clk => rd_ptr[4].CLK
clk => wr_ptr[0].CLK
clk => wr_ptr[1].CLK
clk => wr_ptr[2].CLK
clk => wr_ptr[3].CLK
clk => wr_ptr[4].CLK
clk => data.CLK0
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => empty.OUTPUTSELECT
rst => full.OUTPUTSELECT
push => always0.IN1
push => always2.IN0
push => data.we_a.DATAIN
push => always2.IN0
push => data.WE
pop => always0.IN1
pop => always2.IN1
pop => always2.IN1
write_data[0] => data.data_a[0].DATAIN
write_data[0] => data.DATAIN
write_data[1] => data.data_a[1].DATAIN
write_data[1] => data.DATAIN1
write_data[2] => data.data_a[2].DATAIN
write_data[2] => data.DATAIN2
write_data[3] => data.data_a[3].DATAIN
write_data[3] => data.DATAIN3
write_data[4] => data.data_a[4].DATAIN
write_data[4] => data.DATAIN4
write_data[5] => data.data_a[5].DATAIN
write_data[5] => data.DATAIN5
write_data[6] => data.data_a[6].DATAIN
write_data[6] => data.DATAIN6
write_data[7] => data.data_a[7].DATAIN
write_data[7] => data.DATAIN7
write_data[8] => data.data_a[8].DATAIN
write_data[8] => data.DATAIN8
write_data[9] => data.data_a[9].DATAIN
write_data[9] => data.DATAIN9
read_data[0] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[1] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[2] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[3] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[4] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[5] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[6] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[7] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[8] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[9] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
empty <= empty.DB_MAX_OUTPUT_PORT_TYPE
full <= full.DB_MAX_OUTPUT_PORT_TYPE


|top|FIFO_top:FIFO|flip_flop_fifo:VPOS_FIFO
clk => data.we_a.CLK
clk => data.waddr_a[4].CLK
clk => data.waddr_a[3].CLK
clk => data.waddr_a[2].CLK
clk => data.waddr_a[1].CLK
clk => data.waddr_a[0].CLK
clk => data.data_a[9].CLK
clk => data.data_a[8].CLK
clk => data.data_a[7].CLK
clk => data.data_a[6].CLK
clk => data.data_a[5].CLK
clk => data.data_a[4].CLK
clk => data.data_a[3].CLK
clk => data.data_a[2].CLK
clk => data.data_a[1].CLK
clk => data.data_a[0].CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => rd_ptr[0].CLK
clk => rd_ptr[1].CLK
clk => rd_ptr[2].CLK
clk => rd_ptr[3].CLK
clk => rd_ptr[4].CLK
clk => wr_ptr[0].CLK
clk => wr_ptr[1].CLK
clk => wr_ptr[2].CLK
clk => wr_ptr[3].CLK
clk => wr_ptr[4].CLK
clk => data.CLK0
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => empty.OUTPUTSELECT
rst => full.OUTPUTSELECT
push => always0.IN1
push => always2.IN0
push => data.we_a.DATAIN
push => always2.IN0
push => data.WE
pop => always0.IN1
pop => always2.IN1
pop => always2.IN1
write_data[0] => data.data_a[0].DATAIN
write_data[0] => data.DATAIN
write_data[1] => data.data_a[1].DATAIN
write_data[1] => data.DATAIN1
write_data[2] => data.data_a[2].DATAIN
write_data[2] => data.DATAIN2
write_data[3] => data.data_a[3].DATAIN
write_data[3] => data.DATAIN3
write_data[4] => data.data_a[4].DATAIN
write_data[4] => data.DATAIN4
write_data[5] => data.data_a[5].DATAIN
write_data[5] => data.DATAIN5
write_data[6] => data.data_a[6].DATAIN
write_data[6] => data.DATAIN6
write_data[7] => data.data_a[7].DATAIN
write_data[7] => data.DATAIN7
write_data[8] => data.data_a[8].DATAIN
write_data[8] => data.DATAIN8
write_data[9] => data.data_a[9].DATAIN
write_data[9] => data.DATAIN9
read_data[0] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[1] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[2] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[3] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[4] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[5] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[6] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[7] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[8] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[9] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
empty <= empty.DB_MAX_OUTPUT_PORT_TYPE
full <= full.DB_MAX_OUTPUT_PORT_TYPE


|top|FIFO_top:FIFO|flip_flop_fifo:RGB_FIFO
clk => data.we_a.CLK
clk => data.waddr_a[4].CLK
clk => data.waddr_a[3].CLK
clk => data.waddr_a[2].CLK
clk => data.waddr_a[1].CLK
clk => data.waddr_a[0].CLK
clk => data.data_a[2].CLK
clk => data.data_a[1].CLK
clk => data.data_a[0].CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => rd_ptr[0].CLK
clk => rd_ptr[1].CLK
clk => rd_ptr[2].CLK
clk => rd_ptr[3].CLK
clk => rd_ptr[4].CLK
clk => wr_ptr[0].CLK
clk => wr_ptr[1].CLK
clk => wr_ptr[2].CLK
clk => wr_ptr[3].CLK
clk => wr_ptr[4].CLK
clk => data.CLK0
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => empty.OUTPUTSELECT
rst => full.OUTPUTSELECT
push => always0.IN1
push => always2.IN0
push => data.we_a.DATAIN
push => always2.IN0
push => data.WE
pop => always0.IN1
pop => always2.IN1
pop => always2.IN1
write_data[0] => data.data_a[0].DATAIN
write_data[0] => data.DATAIN
write_data[1] => data.data_a[1].DATAIN
write_data[1] => data.DATAIN1
write_data[2] => data.data_a[2].DATAIN
write_data[2] => data.DATAIN2
read_data[0] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[1] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[2] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
empty <= empty.DB_MAX_OUTPUT_PORT_TYPE
full <= full.DB_MAX_OUTPUT_PORT_TYPE


|top|RGBMemory_top:FrameBuffer
display_on => display_on.IN1
clk => clk.IN4
memreset => memreset.IN4
reset_n => reset_n.IN1
resetcnt[0] => resetcnt[0].IN3
resetcnt[1] => resetcnt[1].IN3
resetcnt[2] => resetcnt[2].IN3
resetcnt[3] => resetcnt[3].IN3
resetcnt[4] => resetcnt[4].IN3
resetcnt[5] => resetcnt[5].IN3
resetcnt[6] => resetcnt[6].IN3
resetcnt[7] => resetcnt[7].IN3
resetcnt[8] => resetcnt[8].IN3
resetcnt[9] => resetcnt[9].IN3
RGBin[0] => RGBin[0].IN1
RGBin[1] => RGBin[1].IN1
RGBin[2] => RGBin[2].IN1
hpos[0] => hpos[0].IN1
hpos[1] => hpos[1].IN1
hpos[2] => hpos[2].IN1
hpos[3] => hpos[3].IN1
hpos[4] => hpos[4].IN1
hpos[5] => hpos[5].IN1
hpos[6] => hpos[6].IN1
hpos[7] => hpos[7].IN1
hpos[8] => hpos[8].IN1
hpos[9] => hpos[9].IN1
vpos[0] => vpos[0].IN1
vpos[1] => vpos[1].IN1
vpos[2] => vpos[2].IN1
vpos[3] => vpos[3].IN1
vpos[4] => vpos[4].IN1
vpos[5] => vpos[5].IN1
vpos[6] => vpos[6].IN1
vpos[7] => vpos[7].IN1
vpos[8] => vpos[8].IN1
vpos[9] => vpos[9].IN1
fifoempty => fifoempty.IN1
RGB[0] <= RGBmemcoderdecoderv2:FBCODEC.RGB
RGB[1] <= RGBmemcoderdecoderv2:FBCODEC.RGB
RGB[2] <= RGBmemcoderdecoderv2:FBCODEC.RGB


|top|RGBMemory_top:FrameBuffer|RGBmemcoderdecoderv2:FBCODEC
clk => we~reg0.CLK
clk => addr_w[0].CLK
clk => addr_w[1].CLK
clk => addr_w[2].CLK
clk => addr_w[3].CLK
clk => addr_w[4].CLK
clk => addr_w[5].CLK
clk => addr_w[6].CLK
clk => addr_w[7].CLK
clk => addr_w[8].CLK
clk => addr_w[9].CLK
clk => addr_r[0].CLK
clk => addr_r[1].CLK
clk => addr_r[2].CLK
clk => addr_r[3].CLK
clk => addr_r[4].CLK
clk => addr_r[5].CLK
clk => addr_r[6].CLK
clk => addr_r[7].CLK
clk => addr_r[8].CLK
clk => addr_r[9].CLK
clk => Bdatatomem[0]~reg0.CLK
clk => Bdatatomem[1]~reg0.CLK
clk => Bdatatomem[2]~reg0.CLK
clk => Bdatatomem[3]~reg0.CLK
clk => Bdatatomem[4]~reg0.CLK
clk => Bdatatomem[5]~reg0.CLK
clk => Gdatatomem[0]~reg0.CLK
clk => Gdatatomem[1]~reg0.CLK
clk => Gdatatomem[2]~reg0.CLK
clk => Gdatatomem[3]~reg0.CLK
clk => Gdatatomem[4]~reg0.CLK
clk => Gdatatomem[5]~reg0.CLK
clk => Rdatatomem[0]~reg0.CLK
clk => Rdatatomem[1]~reg0.CLK
clk => Rdatatomem[2]~reg0.CLK
clk => Rdatatomem[3]~reg0.CLK
clk => Rdatatomem[4]~reg0.CLK
clk => Rdatatomem[5]~reg0.CLK
clk => dataselect_w[0].CLK
clk => dataselect_w[1].CLK
clk => dataselect_w[2].CLK
clk => Bdatabuf[0].CLK
clk => Bdatabuf[1].CLK
clk => Bdatabuf[2].CLK
clk => Bdatabuf[3].CLK
clk => Bdatabuf[4].CLK
clk => Bdatabuf[5].CLK
clk => Gdatabuf[0].CLK
clk => Gdatabuf[1].CLK
clk => Gdatabuf[2].CLK
clk => Gdatabuf[3].CLK
clk => Gdatabuf[4].CLK
clk => Gdatabuf[5].CLK
clk => Rdatabuf[0].CLK
clk => Rdatabuf[1].CLK
clk => Rdatabuf[2].CLK
clk => Rdatabuf[3].CLK
clk => Rdatabuf[4].CLK
clk => Rdatabuf[5].CLK
clk => dataselect_r[0].CLK
clk => dataselect_r[1].CLK
clk => dataselect_r[2].CLK
clk => dataselect[0].CLK
clk => dataselect[1].CLK
clk => dataselect[2].CLK
clk => w_state~6.DATAIN
reset => dataselect.OUTPUTSELECT
reset => dataselect.OUTPUTSELECT
reset => dataselect.OUTPUTSELECT
reset => dataselect_r.OUTPUTSELECT
reset => dataselect_r.OUTPUTSELECT
reset => dataselect_r.OUTPUTSELECT
reset => Rdatabuf.OUTPUTSELECT
reset => Rdatabuf.OUTPUTSELECT
reset => Rdatabuf.OUTPUTSELECT
reset => Rdatabuf.OUTPUTSELECT
reset => Rdatabuf.OUTPUTSELECT
reset => Rdatabuf.OUTPUTSELECT
reset => Gdatabuf.OUTPUTSELECT
reset => Gdatabuf.OUTPUTSELECT
reset => Gdatabuf.OUTPUTSELECT
reset => Gdatabuf.OUTPUTSELECT
reset => Gdatabuf.OUTPUTSELECT
reset => Gdatabuf.OUTPUTSELECT
reset => Bdatabuf.OUTPUTSELECT
reset => Bdatabuf.OUTPUTSELECT
reset => Bdatabuf.OUTPUTSELECT
reset => Bdatabuf.OUTPUTSELECT
reset => Bdatabuf.OUTPUTSELECT
reset => Bdatabuf.OUTPUTSELECT
reset => w_state.OUTPUTSELECT
reset => w_state.OUTPUTSELECT
reset => w_state.OUTPUTSELECT
reset => w_state.OUTPUTSELECT
reset => w_state.OUTPUTSELECT
reset => dataselect_w.OUTPUTSELECT
reset => dataselect_w.OUTPUTSELECT
reset => dataselect_w.OUTPUTSELECT
reset => Rdatatomem.OUTPUTSELECT
reset => Rdatatomem.OUTPUTSELECT
reset => Rdatatomem.OUTPUTSELECT
reset => Rdatatomem.OUTPUTSELECT
reset => Rdatatomem.OUTPUTSELECT
reset => Rdatatomem.OUTPUTSELECT
reset => Gdatatomem.OUTPUTSELECT
reset => Gdatatomem.OUTPUTSELECT
reset => Gdatatomem.OUTPUTSELECT
reset => Gdatatomem.OUTPUTSELECT
reset => Gdatatomem.OUTPUTSELECT
reset => Gdatatomem.OUTPUTSELECT
reset => Bdatatomem.OUTPUTSELECT
reset => Bdatatomem.OUTPUTSELECT
reset => Bdatatomem.OUTPUTSELECT
reset => Bdatatomem.OUTPUTSELECT
reset => Bdatatomem.OUTPUTSELECT
reset => Bdatatomem.OUTPUTSELECT
reset => addr_r.OUTPUTSELECT
reset => addr_r.OUTPUTSELECT
reset => addr_r.OUTPUTSELECT
reset => addr_r.OUTPUTSELECT
reset => addr_r.OUTPUTSELECT
reset => addr_r.OUTPUTSELECT
reset => addr_r.OUTPUTSELECT
reset => addr_r.OUTPUTSELECT
reset => addr_r.OUTPUTSELECT
reset => addr_r.OUTPUTSELECT
reset => addr_w.OUTPUTSELECT
reset => addr_w.OUTPUTSELECT
reset => addr_w.OUTPUTSELECT
reset => addr_w.OUTPUTSELECT
reset => addr_w.OUTPUTSELECT
reset => addr_w.OUTPUTSELECT
reset => addr_w.OUTPUTSELECT
reset => addr_w.OUTPUTSELECT
reset => addr_w.OUTPUTSELECT
reset => addr_w.OUTPUTSELECT
reset => we~reg0.ENA
hpos[0] => addr_w.DATAB
hpos[1] => addr_w.DATAB
hpos[2] => addr_w.DATAB
hpos[3] => addr_w.DATAB
hpos[3] => addr_r.DATAB
hpos[4] => Add3.IN26
hpos[4] => addr_r.DATAB
hpos[5] => Add3.IN25
hpos[5] => addr_r.DATAB
hpos[6] => Add3.IN24
hpos[6] => addr_r.DATAB
hpos[7] => Add1.IN26
hpos[7] => Add3.IN23
hpos[8] => Add1.IN25
hpos[8] => Add3.IN22
hpos[9] => Add1.IN24
hpos[9] => Add3.IN21
vpos[0] => Div0.IN15
vpos[0] => Div1.IN12
vpos[0] => Mod1.IN12
vpos[1] => Div0.IN14
vpos[1] => Div1.IN11
vpos[1] => Mod1.IN11
vpos[2] => Div0.IN13
vpos[2] => Div1.IN10
vpos[2] => Mod1.IN10
vpos[3] => Div0.IN12
vpos[3] => Mod0.IN9
vpos[3] => Div1.IN9
vpos[3] => Mod1.IN9
vpos[4] => Div0.IN11
vpos[4] => Mod0.IN8
vpos[4] => Div1.IN8
vpos[4] => Mod1.IN8
vpos[5] => Div0.IN10
vpos[5] => Mod0.IN7
vpos[5] => Div1.IN7
vpos[5] => Mod1.IN7
vpos[6] => Div0.IN9
vpos[6] => Mod0.IN6
vpos[6] => Div1.IN6
vpos[6] => Mod1.IN6
vpos[7] => Div0.IN8
vpos[7] => Mod0.IN5
vpos[7] => Div1.IN5
vpos[7] => Mod1.IN5
vpos[8] => Div0.IN7
vpos[8] => Mod0.IN4
vpos[8] => Div1.IN4
vpos[8] => Mod1.IN4
vpos[9] => Div0.IN6
vpos[9] => Mod0.IN3
vpos[9] => Div1.IN3
vpos[9] => Mod1.IN3
datafromR[0] => Selector10.IN3
datafromR[0] => Mux0.IN7
datafromR[1] => Selector9.IN3
datafromR[1] => Mux0.IN6
datafromR[2] => Selector8.IN3
datafromR[2] => Mux0.IN5
datafromR[3] => Selector7.IN3
datafromR[3] => Mux0.IN4
datafromR[4] => Selector6.IN3
datafromR[4] => Mux0.IN3
datafromR[5] => Selector5.IN3
datafromR[5] => Mux0.IN2
datafromG[0] => Selector16.IN3
datafromG[0] => Mux1.IN7
datafromG[1] => Selector15.IN3
datafromG[1] => Mux1.IN6
datafromG[2] => Selector14.IN3
datafromG[2] => Mux1.IN5
datafromG[3] => Selector13.IN3
datafromG[3] => Mux1.IN4
datafromG[4] => Selector12.IN3
datafromG[4] => Mux1.IN3
datafromG[5] => Selector11.IN3
datafromG[5] => Mux1.IN2
datafromB[0] => Selector22.IN3
datafromB[0] => Mux2.IN7
datafromB[1] => Selector21.IN3
datafromB[1] => Mux2.IN6
datafromB[2] => Selector20.IN3
datafromB[2] => Mux2.IN5
datafromB[3] => Selector19.IN3
datafromB[3] => Mux2.IN4
datafromB[4] => Selector18.IN3
datafromB[4] => Mux2.IN3
datafromB[5] => Selector17.IN3
datafromB[5] => Mux2.IN2
RGBin[0] => Bdatabuf.DATAB
RGBin[0] => Bdatabuf.DATAB
RGBin[0] => Bdatabuf.DATAB
RGBin[0] => Bdatabuf.DATAB
RGBin[0] => Bdatabuf.DATAB
RGBin[0] => Bdatabuf.DATAB
RGBin[1] => Gdatabuf.DATAB
RGBin[1] => Gdatabuf.DATAB
RGBin[1] => Gdatabuf.DATAB
RGBin[1] => Gdatabuf.DATAB
RGBin[1] => Gdatabuf.DATAB
RGBin[1] => Gdatabuf.DATAB
RGBin[2] => Rdatabuf.DATAB
RGBin[2] => Rdatabuf.DATAB
RGBin[2] => Rdatabuf.DATAB
RGBin[2] => Rdatabuf.DATAB
RGBin[2] => Rdatabuf.DATAB
RGBin[2] => Rdatabuf.DATAB
display_on => always0.IN0
display_on => addr.OUTPUTSELECT
display_on => addr.OUTPUTSELECT
display_on => addr.OUTPUTSELECT
display_on => addr.OUTPUTSELECT
display_on => addr.OUTPUTSELECT
display_on => addr.OUTPUTSELECT
display_on => addr.OUTPUTSELECT
display_on => addr.OUTPUTSELECT
display_on => addr.OUTPUTSELECT
display_on => addr.OUTPUTSELECT
display_on => always0.IN0
display_on => RGB.OUTPUTSELECT
display_on => RGB.OUTPUTSELECT
display_on => RGB.OUTPUTSELECT
memenable => always0.IN1
memenable => always0.IN1
fifoempty => always0.IN1
we <= we~reg0.DB_MAX_OUTPUT_PORT_TYPE
RGB[0] <= RGB.DB_MAX_OUTPUT_PORT_TYPE
RGB[1] <= RGB.DB_MAX_OUTPUT_PORT_TYPE
RGB[2] <= RGB.DB_MAX_OUTPUT_PORT_TYPE
Rdatatomem[0] <= Rdatatomem[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rdatatomem[1] <= Rdatatomem[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rdatatomem[2] <= Rdatatomem[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rdatatomem[3] <= Rdatatomem[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rdatatomem[4] <= Rdatatomem[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rdatatomem[5] <= Rdatatomem[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Gdatatomem[0] <= Gdatatomem[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Gdatatomem[1] <= Gdatatomem[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Gdatatomem[2] <= Gdatatomem[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Gdatatomem[3] <= Gdatatomem[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Gdatatomem[4] <= Gdatatomem[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Gdatatomem[5] <= Gdatatomem[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Bdatatomem[0] <= Bdatatomem[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Bdatatomem[1] <= Bdatatomem[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Bdatatomem[2] <= Bdatatomem[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Bdatatomem[3] <= Bdatatomem[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Bdatatomem[4] <= Bdatatomem[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Bdatatomem[5] <= Bdatatomem[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[0] <= addr.DB_MAX_OUTPUT_PORT_TYPE
addr[1] <= addr.DB_MAX_OUTPUT_PORT_TYPE
addr[2] <= addr.DB_MAX_OUTPUT_PORT_TYPE
addr[3] <= addr.DB_MAX_OUTPUT_PORT_TYPE
addr[4] <= addr.DB_MAX_OUTPUT_PORT_TYPE
addr[5] <= addr.DB_MAX_OUTPUT_PORT_TYPE
addr[6] <= addr.DB_MAX_OUTPUT_PORT_TYPE
addr[7] <= addr.DB_MAX_OUTPUT_PORT_TYPE
addr[8] <= addr.DB_MAX_OUTPUT_PORT_TYPE
addr[9] <= addr.DB_MAX_OUTPUT_PORT_TYPE


|top|RGBMemory_top:FrameBuffer|single_port_ram:R_MEMORY
data[0] => data_x[0].DATAB
data[1] => data_x[1].DATAB
data[2] => data_x[2].DATAB
data[3] => data_x[3].DATAB
data[4] => data_x[4].DATAB
data[5] => data_x[5].DATAB
addr[0] => ramblock.raddr_a[0].DATAB
addr[1] => ramblock.raddr_a[1].DATAB
addr[2] => ramblock.raddr_a[2].DATAB
addr[3] => ramblock.raddr_a[3].DATAB
addr[4] => ramblock.raddr_a[4].DATAB
addr[5] => ramblock.raddr_a[5].DATAB
addr[6] => ramblock.raddr_a[6].DATAB
addr[7] => ramblock.raddr_a[7].DATAB
addr[8] => ramblock.raddr_a[8].DATAB
addr[9] => ramblock.raddr_a[9].DATAB
we => we_x.DATAB
clk => ramblock.we_a.CLK
clk => ramblock.waddr_a[9].CLK
clk => ramblock.waddr_a[8].CLK
clk => ramblock.waddr_a[7].CLK
clk => ramblock.waddr_a[6].CLK
clk => ramblock.waddr_a[5].CLK
clk => ramblock.waddr_a[4].CLK
clk => ramblock.waddr_a[3].CLK
clk => ramblock.waddr_a[2].CLK
clk => ramblock.waddr_a[1].CLK
clk => ramblock.waddr_a[0].CLK
clk => ramblock.data_a[5].CLK
clk => ramblock.data_a[4].CLK
clk => ramblock.data_a[3].CLK
clk => ramblock.data_a[2].CLK
clk => ramblock.data_a[1].CLK
clk => ramblock.data_a[0].CLK
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
clk => q[4]~reg0.CLK
clk => q[5]~reg0.CLK
clk => ramblock.CLK0
memenable => ramblock.raddr_a[9].OUTPUTSELECT
memenable => ramblock.raddr_a[8].OUTPUTSELECT
memenable => ramblock.raddr_a[7].OUTPUTSELECT
memenable => ramblock.raddr_a[6].OUTPUTSELECT
memenable => ramblock.raddr_a[5].OUTPUTSELECT
memenable => ramblock.raddr_a[4].OUTPUTSELECT
memenable => ramblock.raddr_a[3].OUTPUTSELECT
memenable => ramblock.raddr_a[2].OUTPUTSELECT
memenable => ramblock.raddr_a[1].OUTPUTSELECT
memenable => ramblock.raddr_a[0].OUTPUTSELECT
memenable => data_x[5].OUTPUTSELECT
memenable => data_x[4].OUTPUTSELECT
memenable => data_x[3].OUTPUTSELECT
memenable => data_x[2].OUTPUTSELECT
memenable => data_x[1].OUTPUTSELECT
memenable => data_x[0].OUTPUTSELECT
memenable => we_x.OUTPUTSELECT
resetcnt[0] => ramblock.raddr_a[0].DATAA
resetcnt[1] => ramblock.raddr_a[1].DATAA
resetcnt[2] => ramblock.raddr_a[2].DATAA
resetcnt[3] => ramblock.raddr_a[3].DATAA
resetcnt[4] => ramblock.raddr_a[4].DATAA
resetcnt[5] => ramblock.raddr_a[5].DATAA
resetcnt[6] => ramblock.raddr_a[6].DATAA
resetcnt[7] => ramblock.raddr_a[7].DATAA
resetcnt[8] => ramblock.raddr_a[8].DATAA
resetcnt[9] => ramblock.raddr_a[9].DATAA
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|RGBMemory_top:FrameBuffer|single_port_ram:G_MEMORY
data[0] => data_x[0].DATAB
data[1] => data_x[1].DATAB
data[2] => data_x[2].DATAB
data[3] => data_x[3].DATAB
data[4] => data_x[4].DATAB
data[5] => data_x[5].DATAB
addr[0] => ramblock.raddr_a[0].DATAB
addr[1] => ramblock.raddr_a[1].DATAB
addr[2] => ramblock.raddr_a[2].DATAB
addr[3] => ramblock.raddr_a[3].DATAB
addr[4] => ramblock.raddr_a[4].DATAB
addr[5] => ramblock.raddr_a[5].DATAB
addr[6] => ramblock.raddr_a[6].DATAB
addr[7] => ramblock.raddr_a[7].DATAB
addr[8] => ramblock.raddr_a[8].DATAB
addr[9] => ramblock.raddr_a[9].DATAB
we => we_x.DATAB
clk => ramblock.we_a.CLK
clk => ramblock.waddr_a[9].CLK
clk => ramblock.waddr_a[8].CLK
clk => ramblock.waddr_a[7].CLK
clk => ramblock.waddr_a[6].CLK
clk => ramblock.waddr_a[5].CLK
clk => ramblock.waddr_a[4].CLK
clk => ramblock.waddr_a[3].CLK
clk => ramblock.waddr_a[2].CLK
clk => ramblock.waddr_a[1].CLK
clk => ramblock.waddr_a[0].CLK
clk => ramblock.data_a[5].CLK
clk => ramblock.data_a[4].CLK
clk => ramblock.data_a[3].CLK
clk => ramblock.data_a[2].CLK
clk => ramblock.data_a[1].CLK
clk => ramblock.data_a[0].CLK
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
clk => q[4]~reg0.CLK
clk => q[5]~reg0.CLK
clk => ramblock.CLK0
memenable => ramblock.raddr_a[9].OUTPUTSELECT
memenable => ramblock.raddr_a[8].OUTPUTSELECT
memenable => ramblock.raddr_a[7].OUTPUTSELECT
memenable => ramblock.raddr_a[6].OUTPUTSELECT
memenable => ramblock.raddr_a[5].OUTPUTSELECT
memenable => ramblock.raddr_a[4].OUTPUTSELECT
memenable => ramblock.raddr_a[3].OUTPUTSELECT
memenable => ramblock.raddr_a[2].OUTPUTSELECT
memenable => ramblock.raddr_a[1].OUTPUTSELECT
memenable => ramblock.raddr_a[0].OUTPUTSELECT
memenable => data_x[5].OUTPUTSELECT
memenable => data_x[4].OUTPUTSELECT
memenable => data_x[3].OUTPUTSELECT
memenable => data_x[2].OUTPUTSELECT
memenable => data_x[1].OUTPUTSELECT
memenable => data_x[0].OUTPUTSELECT
memenable => we_x.OUTPUTSELECT
resetcnt[0] => ramblock.raddr_a[0].DATAA
resetcnt[1] => ramblock.raddr_a[1].DATAA
resetcnt[2] => ramblock.raddr_a[2].DATAA
resetcnt[3] => ramblock.raddr_a[3].DATAA
resetcnt[4] => ramblock.raddr_a[4].DATAA
resetcnt[5] => ramblock.raddr_a[5].DATAA
resetcnt[6] => ramblock.raddr_a[6].DATAA
resetcnt[7] => ramblock.raddr_a[7].DATAA
resetcnt[8] => ramblock.raddr_a[8].DATAA
resetcnt[9] => ramblock.raddr_a[9].DATAA
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|RGBMemory_top:FrameBuffer|single_port_ram:B_MEMORY
data[0] => data_x[0].DATAB
data[1] => data_x[1].DATAB
data[2] => data_x[2].DATAB
data[3] => data_x[3].DATAB
data[4] => data_x[4].DATAB
data[5] => data_x[5].DATAB
addr[0] => ramblock.raddr_a[0].DATAB
addr[1] => ramblock.raddr_a[1].DATAB
addr[2] => ramblock.raddr_a[2].DATAB
addr[3] => ramblock.raddr_a[3].DATAB
addr[4] => ramblock.raddr_a[4].DATAB
addr[5] => ramblock.raddr_a[5].DATAB
addr[6] => ramblock.raddr_a[6].DATAB
addr[7] => ramblock.raddr_a[7].DATAB
addr[8] => ramblock.raddr_a[8].DATAB
addr[9] => ramblock.raddr_a[9].DATAB
we => we_x.DATAB
clk => ramblock.we_a.CLK
clk => ramblock.waddr_a[9].CLK
clk => ramblock.waddr_a[8].CLK
clk => ramblock.waddr_a[7].CLK
clk => ramblock.waddr_a[6].CLK
clk => ramblock.waddr_a[5].CLK
clk => ramblock.waddr_a[4].CLK
clk => ramblock.waddr_a[3].CLK
clk => ramblock.waddr_a[2].CLK
clk => ramblock.waddr_a[1].CLK
clk => ramblock.waddr_a[0].CLK
clk => ramblock.data_a[5].CLK
clk => ramblock.data_a[4].CLK
clk => ramblock.data_a[3].CLK
clk => ramblock.data_a[2].CLK
clk => ramblock.data_a[1].CLK
clk => ramblock.data_a[0].CLK
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
clk => q[4]~reg0.CLK
clk => q[5]~reg0.CLK
clk => ramblock.CLK0
memenable => ramblock.raddr_a[9].OUTPUTSELECT
memenable => ramblock.raddr_a[8].OUTPUTSELECT
memenable => ramblock.raddr_a[7].OUTPUTSELECT
memenable => ramblock.raddr_a[6].OUTPUTSELECT
memenable => ramblock.raddr_a[5].OUTPUTSELECT
memenable => ramblock.raddr_a[4].OUTPUTSELECT
memenable => ramblock.raddr_a[3].OUTPUTSELECT
memenable => ramblock.raddr_a[2].OUTPUTSELECT
memenable => ramblock.raddr_a[1].OUTPUTSELECT
memenable => ramblock.raddr_a[0].OUTPUTSELECT
memenable => data_x[5].OUTPUTSELECT
memenable => data_x[4].OUTPUTSELECT
memenable => data_x[3].OUTPUTSELECT
memenable => data_x[2].OUTPUTSELECT
memenable => data_x[1].OUTPUTSELECT
memenable => data_x[0].OUTPUTSELECT
memenable => we_x.OUTPUTSELECT
resetcnt[0] => ramblock.raddr_a[0].DATAA
resetcnt[1] => ramblock.raddr_a[1].DATAA
resetcnt[2] => ramblock.raddr_a[2].DATAA
resetcnt[3] => ramblock.raddr_a[3].DATAA
resetcnt[4] => ramblock.raddr_a[4].DATAA
resetcnt[5] => ramblock.raddr_a[5].DATAA
resetcnt[6] => ramblock.raddr_a[6].DATAA
resetcnt[7] => ramblock.raddr_a[7].DATAA
resetcnt[8] => ramblock.raddr_a[8].DATAA
resetcnt[9] => ramblock.raddr_a[9].DATAA
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|memsyncreset:memsyncreset
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => memenable~reg0.CLK
clk => stp~4.DATAIN
memreset => stp.OUTPUTSELECT
memreset => stp.OUTPUTSELECT
memreset => stp.OUTPUTSELECT
resetcnt[0] <= counter[0].DB_MAX_OUTPUT_PORT_TYPE
resetcnt[1] <= counter[1].DB_MAX_OUTPUT_PORT_TYPE
resetcnt[2] <= counter[2].DB_MAX_OUTPUT_PORT_TYPE
resetcnt[3] <= counter[3].DB_MAX_OUTPUT_PORT_TYPE
resetcnt[4] <= counter[4].DB_MAX_OUTPUT_PORT_TYPE
resetcnt[5] <= counter[5].DB_MAX_OUTPUT_PORT_TYPE
resetcnt[6] <= counter[6].DB_MAX_OUTPUT_PORT_TYPE
resetcnt[7] <= counter[7].DB_MAX_OUTPUT_PORT_TYPE
resetcnt[8] <= counter[8].DB_MAX_OUTPUT_PORT_TYPE
resetcnt[9] <= counter[9].DB_MAX_OUTPUT_PORT_TYPE
resetcnt[10] <= counter[10].DB_MAX_OUTPUT_PORT_TYPE
memenable <= memenable~reg0.DB_MAX_OUTPUT_PORT_TYPE


