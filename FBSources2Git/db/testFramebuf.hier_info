|FIFO_top
clk => clk.IN3
rst => rst.IN3
push => push.IN3
pop => pop.IN3
hpos_write[0] => hpos_write[0].IN1
hpos_write[1] => hpos_write[1].IN1
hpos_write[2] => hpos_write[2].IN1
hpos_write[3] => hpos_write[3].IN1
hpos_write[4] => hpos_write[4].IN1
hpos_write[5] => hpos_write[5].IN1
hpos_write[6] => hpos_write[6].IN1
hpos_write[7] => hpos_write[7].IN1
hpos_write[8] => hpos_write[8].IN1
hpos_write[9] => hpos_write[9].IN1
hpos_write[10] => hpos_write[10].IN1
vpos_write[0] => vpos_write[0].IN1
vpos_write[1] => vpos_write[1].IN1
vpos_write[2] => vpos_write[2].IN1
vpos_write[3] => vpos_write[3].IN1
vpos_write[4] => vpos_write[4].IN1
vpos_write[5] => vpos_write[5].IN1
vpos_write[6] => vpos_write[6].IN1
vpos_write[7] => vpos_write[7].IN1
vpos_write[8] => vpos_write[8].IN1
vpos_write[9] => vpos_write[9].IN1
RGB_write[0] => RGB_write[0].IN1
RGB_write[1] => RGB_write[1].IN1
RGB_write[2] => RGB_write[2].IN1
hpos_read[0] <= flip_flop_fifo:HPOS_FIFO.read_data
hpos_read[1] <= flip_flop_fifo:HPOS_FIFO.read_data
hpos_read[2] <= flip_flop_fifo:HPOS_FIFO.read_data
hpos_read[3] <= flip_flop_fifo:HPOS_FIFO.read_data
hpos_read[4] <= flip_flop_fifo:HPOS_FIFO.read_data
hpos_read[5] <= flip_flop_fifo:HPOS_FIFO.read_data
hpos_read[6] <= flip_flop_fifo:HPOS_FIFO.read_data
hpos_read[7] <= flip_flop_fifo:HPOS_FIFO.read_data
hpos_read[8] <= flip_flop_fifo:HPOS_FIFO.read_data
hpos_read[9] <= flip_flop_fifo:HPOS_FIFO.read_data
hpos_read[10] <= flip_flop_fifo:HPOS_FIFO.read_data
vpos_read[0] <= flip_flop_fifo:VPOS_FIFO.read_data
vpos_read[1] <= flip_flop_fifo:VPOS_FIFO.read_data
vpos_read[2] <= flip_flop_fifo:VPOS_FIFO.read_data
vpos_read[3] <= flip_flop_fifo:VPOS_FIFO.read_data
vpos_read[4] <= flip_flop_fifo:VPOS_FIFO.read_data
vpos_read[5] <= flip_flop_fifo:VPOS_FIFO.read_data
vpos_read[6] <= flip_flop_fifo:VPOS_FIFO.read_data
vpos_read[7] <= flip_flop_fifo:VPOS_FIFO.read_data
vpos_read[8] <= flip_flop_fifo:VPOS_FIFO.read_data
vpos_read[9] <= flip_flop_fifo:VPOS_FIFO.read_data
RGB_read[0] <= flip_flop_fifo:RGB_FIFO.read_data
RGB_read[1] <= flip_flop_fifo:RGB_FIFO.read_data
RGB_read[2] <= flip_flop_fifo:RGB_FIFO.read_data
empty <= empty.DB_MAX_OUTPUT_PORT_TYPE
full <= full.DB_MAX_OUTPUT_PORT_TYPE


|FIFO_top|flip_flop_fifo:HPOS_FIFO
clk => data.we_a.CLK
clk => data.waddr_a[3].CLK
clk => data.waddr_a[2].CLK
clk => data.waddr_a[1].CLK
clk => data.waddr_a[0].CLK
clk => data.data_a[10].CLK
clk => data.data_a[9].CLK
clk => data.data_a[8].CLK
clk => data.data_a[7].CLK
clk => data.data_a[6].CLK
clk => data.data_a[5].CLK
clk => data.data_a[4].CLK
clk => data.data_a[3].CLK
clk => data.data_a[2].CLK
clk => data.data_a[1].CLK
clk => data.data_a[0].CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => rd_ptr[0].CLK
clk => rd_ptr[1].CLK
clk => rd_ptr[2].CLK
clk => rd_ptr[3].CLK
clk => wr_ptr[0].CLK
clk => wr_ptr[1].CLK
clk => wr_ptr[2].CLK
clk => wr_ptr[3].CLK
clk => data.CLK0
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => empty.OUTPUTSELECT
rst => full.OUTPUTSELECT
push => always0.IN1
push => always2.IN0
push => data.we_a.DATAIN
push => always2.IN0
push => data.WE
pop => always0.IN1
pop => always2.IN1
pop => always2.IN1
write_data[0] => data.data_a[0].DATAIN
write_data[0] => data.DATAIN
write_data[1] => data.data_a[1].DATAIN
write_data[1] => data.DATAIN1
write_data[2] => data.data_a[2].DATAIN
write_data[2] => data.DATAIN2
write_data[3] => data.data_a[3].DATAIN
write_data[3] => data.DATAIN3
write_data[4] => data.data_a[4].DATAIN
write_data[4] => data.DATAIN4
write_data[5] => data.data_a[5].DATAIN
write_data[5] => data.DATAIN5
write_data[6] => data.data_a[6].DATAIN
write_data[6] => data.DATAIN6
write_data[7] => data.data_a[7].DATAIN
write_data[7] => data.DATAIN7
write_data[8] => data.data_a[8].DATAIN
write_data[8] => data.DATAIN8
write_data[9] => data.data_a[9].DATAIN
write_data[9] => data.DATAIN9
write_data[10] => data.data_a[10].DATAIN
write_data[10] => data.DATAIN10
read_data[0] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[1] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[2] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[3] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[4] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[5] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[6] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[7] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[8] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[9] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[10] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
empty <= empty.DB_MAX_OUTPUT_PORT_TYPE
full <= full.DB_MAX_OUTPUT_PORT_TYPE


|FIFO_top|flip_flop_fifo:VPOS_FIFO
clk => data.we_a.CLK
clk => data.waddr_a[3].CLK
clk => data.waddr_a[2].CLK
clk => data.waddr_a[1].CLK
clk => data.waddr_a[0].CLK
clk => data.data_a[9].CLK
clk => data.data_a[8].CLK
clk => data.data_a[7].CLK
clk => data.data_a[6].CLK
clk => data.data_a[5].CLK
clk => data.data_a[4].CLK
clk => data.data_a[3].CLK
clk => data.data_a[2].CLK
clk => data.data_a[1].CLK
clk => data.data_a[0].CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => rd_ptr[0].CLK
clk => rd_ptr[1].CLK
clk => rd_ptr[2].CLK
clk => rd_ptr[3].CLK
clk => wr_ptr[0].CLK
clk => wr_ptr[1].CLK
clk => wr_ptr[2].CLK
clk => wr_ptr[3].CLK
clk => data.CLK0
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => empty.OUTPUTSELECT
rst => full.OUTPUTSELECT
push => always0.IN1
push => always2.IN0
push => data.we_a.DATAIN
push => always2.IN0
push => data.WE
pop => always0.IN1
pop => always2.IN1
pop => always2.IN1
write_data[0] => data.data_a[0].DATAIN
write_data[0] => data.DATAIN
write_data[1] => data.data_a[1].DATAIN
write_data[1] => data.DATAIN1
write_data[2] => data.data_a[2].DATAIN
write_data[2] => data.DATAIN2
write_data[3] => data.data_a[3].DATAIN
write_data[3] => data.DATAIN3
write_data[4] => data.data_a[4].DATAIN
write_data[4] => data.DATAIN4
write_data[5] => data.data_a[5].DATAIN
write_data[5] => data.DATAIN5
write_data[6] => data.data_a[6].DATAIN
write_data[6] => data.DATAIN6
write_data[7] => data.data_a[7].DATAIN
write_data[7] => data.DATAIN7
write_data[8] => data.data_a[8].DATAIN
write_data[8] => data.DATAIN8
write_data[9] => data.data_a[9].DATAIN
write_data[9] => data.DATAIN9
read_data[0] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[1] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[2] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[3] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[4] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[5] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[6] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[7] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[8] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[9] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
empty <= empty.DB_MAX_OUTPUT_PORT_TYPE
full <= full.DB_MAX_OUTPUT_PORT_TYPE


|FIFO_top|flip_flop_fifo:RGB_FIFO
clk => data.we_a.CLK
clk => data.waddr_a[3].CLK
clk => data.waddr_a[2].CLK
clk => data.waddr_a[1].CLK
clk => data.waddr_a[0].CLK
clk => data.data_a[2].CLK
clk => data.data_a[1].CLK
clk => data.data_a[0].CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => rd_ptr[0].CLK
clk => rd_ptr[1].CLK
clk => rd_ptr[2].CLK
clk => rd_ptr[3].CLK
clk => wr_ptr[0].CLK
clk => wr_ptr[1].CLK
clk => wr_ptr[2].CLK
clk => wr_ptr[3].CLK
clk => data.CLK0
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => wr_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => rd_ptr.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => empty.OUTPUTSELECT
rst => full.OUTPUTSELECT
push => always0.IN1
push => always2.IN0
push => data.we_a.DATAIN
push => always2.IN0
push => data.WE
pop => always0.IN1
pop => always2.IN1
pop => always2.IN1
write_data[0] => data.data_a[0].DATAIN
write_data[0] => data.DATAIN
write_data[1] => data.data_a[1].DATAIN
write_data[1] => data.DATAIN1
write_data[2] => data.data_a[2].DATAIN
write_data[2] => data.DATAIN2
read_data[0] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[1] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[2] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
empty <= empty.DB_MAX_OUTPUT_PORT_TYPE
full <= full.DB_MAX_OUTPUT_PORT_TYPE


